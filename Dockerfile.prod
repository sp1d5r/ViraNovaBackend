# Use the official AWS base image for Python 3.11
FROM public.ecr.aws/lambda/python:3.11

# Set the working directory inside the container
WORKDIR /var/task

# Set environment variables
ARG FIREBASE_STORAGE_BUCKET
ENV FIREBASE_STORAGE_BUCKET=${FIREBASE_STORAGE_BUCKET}

ARG OPENAI_API_KEY
ENV OPENAI_API_KEY=${OPENAI_API_KEY}

ARG OPEN_AI_KEY_OLD
ENV OPEN_AI_KEY_OLD=${OPEN_AI_KEY_OLD}

ARG SERVICE_ACCOUNT_ENCODED
ENV SERVICE_ACCOUNT_ENCODED=${SERVICE_ACCOUNT_ENCODED}

ARG BACKEND_SERVICE_ADDRESS
ENV BACKEND_SERVICE_ADDRESS=${BACKEND_SERVICE_ADDRESS}

ARG VIDEO_DOWNLOAD_LOCATION
ENV VIDEO_DOWNLOAD_LOCATION=${VIDEO_DOWNLOAD_LOCATION}

ARG AUDIO_DOWNLOAD_LOCATION
ENV AUDIO_DOWNLOAD_LOCATION=${AUDIO_DOWNLOAD_LOCATION}

ARG POSTGRES_USER
ENV POSTGRES_USER=${POSTGRES_USER}

ARG POSTGRES_PASSWORD
ENV POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

ARG POSTGRES_HOST
ENV POSTGRES_HOST=${POSTGRES_HOST}

ARG POSTGRES_PORT
ENV POSTGRES_PORT=${POSTGRES_PORT}

ARG POSTGRES_DATABASE
ENV POSTGRES_DATABASE=${POSTGRES_DATABASE}

ARG POSTGRES_SSLMODE
ENV POSTGRES_SSLMODE=${POSTGRES_SSLMODE}

ARG QDRANT_LOCATION
ENV QDRANT_LOCATION=${QDRANT_LOCATION}

ARG LANGCHAIN_TRACING_V2
ENV LANGCHAIN_TRACING_V2=${LANGCHAIN_TRACING_V2}

ARG LANGCHAIN_API_KEY
ENV LANGCHAIN_API_KEY=${LANGCHAIN_API_KEY}

ARG LANGCHAIN_PROJECT
ENV LANGCHAIN_PROJECT=${LANGCHAIN_PROJECT}

ARG NUM_CPU_CORES
ENV NUM_CPU_CORES=${NUM_CPU_CORES}

ARG SECRET_KEY
ENV SECRET_KEY=${SECRET_KEY}

ARG SALIENCY_BEARER_TOKEN
ENV SALIENCY_BEARER_TOKEN=${SALIENCY_BEARER_TOKEN}

ARG SALIENCY_ENDPOINT_ADDRESS
ENV SALIENCY_ENDPOINT_ADDRESS=${SALIENCY_ENDPOINT_ADDRESS}

ARG APIFY_TOKEN
ENV APIFY_TOKEN=${APIFY_TOKEN}

ARG YOUTUBE_API_KEY
ENV YOUTUBE_API_KEY=${YOUTUBE_API_KEY}

ARG BREVO_API_KEY
ENV BREVO_API_KEY=${BREVO_API_KEY}

ARG DEEP_GRAM_API_KEY
ENV DEEP_GRAM_API_KEY=${DEEP_GRAM_API_KEY}

ARG ELEVENLABS_API_KEY
ENV ELEVENLABS_API_KEY=${ELEVENLABS_API_KEY}

ARG BEAM_BEARER_TOKEN
ENV BEAM_BEARER_TOKEN=${BEAM_BEARER_TOKEN}

ARG IMAGE_GENERATOR_ENDPOINT
ENV IMAGE_GENERATOR_ENDPOINT=${IMAGE_GENERATOR_ENDPOINT}


# Update YUM and install required system dependencies including ffmpeg
RUN yum -y update && \
    yum -y install gcc python3-devel mesa-libGL ffmpeg git && \
    yum clean all

# Copy the OAuthTokenFile into the working directory
COPY tokenoauth.json /var/task/tokenoauth.json

# Copy the requirements file into the image
COPY ./serverless_backend/requirements.txt .

# Copy FFMPEG to the user/bin
COPY serverless_backend/ffmpeg /usr/bin
RUN chmod +x /usr/bin/ffmpeg

# Copy FFPROBE to the user/bin
COPY serverless_backend/ffprobe /usr/bin
RUN chmod +x /usr/bin/ffprobe

# Install the required packages with increased timeout
RUN pip install --timeout=100 --no-cache-dir -r requirements.txt
RUN python -m pip install git+https://github.com/JuanBindez/pytubefix.git

# Copy the rest of the application code into the image
COPY serverless_backend/ /var/task/serverless_backend/

# Add a tmp location
RUN chmod -R 777 /tmp


# Set the PYTHONPATH environment variable to include the serverless-backend directory
ENV PYTHONPATH=/var/task

# Set the CMD to your handler
CMD ["serverless_backend.app.lambda_handler"]
